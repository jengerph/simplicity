<?php
///////////////////////////////////////////////////////////////////////////////
//
// plans.class - Class for accessing plans details
// $Id$
//
///////////////////////////////////////////////////////////////////////////////
//
// HISTORY:
// $Log$
///////////////////////////////////////////////////////////////////////////////
include_once "db.class";
include_once "config.class";
include_once "audit.class";
include_once "service_types.class";
include_once "wholesalers.class";

class plans {
  
  var $plan_id;
  var $description;
  var $type_id;
  var $sub_type;
  var $wholesaler_id;
  var $parent_plan_id;
  var $active;
  var $access_method;
  var $speed;
  var $price_zone;
  var $group_id;

  var $db;
  var $server_name;
  var $database_name;
  var $user_name;
  var $user_password;


  /* function plans() 
  **
  ** DESCRIPTION: Class constructor, initalizes and sets up DB connectoin
  **
  ** PARAMETERS:
  **
  ** RETURNS:
  ** 
  */
  function plans() { 
    
  
    $config = new config();
    
    $this->server_name = $config->mysql_server_name;
    $this->database_name = $config->mysql_database_name;
    $this->user_name = $config->mysql_user_name;
    $this->user_password = $config->mysql_user_password;

    $this->db = new db($this->server_name, $this->database_name, $this->user_name, $this->user_password);
    
  }

  /* function load()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function load() {

    $this->plan_id = strtoupper($this->plan_id);

    if (!$this->plan_id) {
    
      return 0;
      
    }
  
    if ($this->plan_id) {
      
      $query = "SELECT * FROM plans WHERE plan_id = " . $this->db->quote($this->plan_id);
      $result = $this->db->execute_query($query);
      if ($result != 0 ) {

        $row = $this->db->fetch_row_array($result);
         if ( $row ) { 
          while ($cel = each($row)) {

            $key = $cel['key'];
            
            $this->{$key} = $cel['value'];
          }
        }
      }    
    }


    return 0;
    
  }

  /* function exist()
  **
  ** DESCRIPTION: checks to see if an id exists
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - exists
  ** 0 - does not exist
  ** 
  */
  function exist() {
  
    $this->plan_id = strtolower($this->plan_id);

    // Check we have an user
    if (!$this->plan_id) {
    
      return 0;
      
    }
    
    $query = "SELECT plan_id FROM plans WHERE plan_id = " . $this->db->quote($this->plan_id);
    $result = $this->db->execute_query($query);
      
    if ($result != 0 ) {
    
      $row_count = $this->db->fetch_row_count($result);
      
      if ($row_count == 1) {
      
        return 1;
        
      } else {
      
        return 0;
        
      }
      
    }
    
    return 0;
  
    
  }



  /* function create()
  **
  ** DESCRIPTION: creates a new entry
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function create_real() {
  
    // Validate
    if (plans::validate()) {
    
      return 0;
      
    }

    // Create the property search
    $query = "INSERT INTO plans (description, type_id, sub_type, wholesaler_id, parent_plan_id, active, access_method, speed,price_zone,group_id)";
    $query .= " VALUES (" . $this->db->quote($this->description) . "," . $this->db->quote($this->type_id) . "," . $this->db->quote($this->sub_type) . "," . $this->db->quote($this->wholesaler_id) . "," . $this->db->quote($this->parent_plan_id) . "," . $this->db->quote($this->active) . "," . $this->db->quote($this->access_method) . "," . $this->db->quote($this->speed) . "," . $this->db->quote($this->price_zone) . "," . $this->db->quote($this->group_id) . ")";

    $result = $this->db->execute_query($query);
    
    if ($result == 0) {
      return 0;
      
    } else {

      $this->plan_id = $this->db->fetch_insert_id();
      
      //Audit section for storing first changes
        $temp = get_object_vars($this);

        unset($temp['db']);
        unset($temp["server_name"]);
        unset($temp["database_name"]);
        unset($temp["user_name"]);
        unset($temp["user_password"]);
        $keys = array_keys($temp);

        $changes = new audit();
        $changes->store_first_changes($keys,$this,"plans",$this->plan_id);

      return 1;
          
    }
  }
  
  function create() {
    if ($this->create_real() == 1) {

      $this->load();
    
      return 1;
      
    } else {
    
      return 0;
      
    }    
      
  }

  /* function save_real()
  **
  ** DESCRIPTION: saves current data into an already existant entry
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function save_real() {
  
    // Validate
    if (plans::validate()) {
    
      return 0;
      
    }

    // Check if id exists    
    if (!plans::exist()) {
      return 0;
      
    }
    $plans = new plans();
    $plans->plan_id = $this->plan_id;
    $plans->load();
    
    $query = "UPDATE plans SET description = " . $this->db->quote($this->description) . ", type_id = " . $this->db->quote($this->type_id) . ", sub_type = " . $this->db->quote($this->sub_type) . ", wholesaler_id = " . $this->db->quote($this->wholesaler_id) . ", parent_plan_id = " . $this->db->quote($this->parent_plan_id) . ", active = " . $this->db->quote($this->active) . ", access_method = " . $this->db->quote($this->access_method) . ", speed = " . $this->db->quote($this->speed) . ", price_zone = " . $this->db->quote($this->price_zone) . ", group_id = " . $this->db->quote($this->group_id);
    $query .= " WHERE plan_id = " . $this->db->quote($this->plan_id);
    $result = $this->db->execute_query($query);

    if ($result == 0) {

      return 0;
      
    } else {

      //Audit section for storing first changes
        $temp = get_object_vars($this);

        unset($temp['db']);
        unset($temp["server_name"]);
        unset($temp["database_name"]);
        unset($temp["user_name"]);
        unset($temp["user_password"]);
        $keys = array_keys($temp);
        
        $changes = new audit();
        $changes->store_changes($keys,$plans,$this,"plans",$this->plan_id);

      return 1;
        
    }
  }

  function save() {
  
    if ($this->save_real() == 1) {

      $this->load();
    
      return 1;
      
    } else {
    
      return 0;
      
    }    
      
  }

  /* function validate()
  **
  ** DESCRIPTION: validates data currently stored in variables
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 0 - sucess
  ** 
  */
  function validate() {

    if ( !$this->description ) {
      return 170;
    }
    
    if ( !$this->type_id ) {
      return 140;
    } else {
      $service_type = new service_types();
      $service_type->type_id = $this->type_id;
      $service_type->load();
      if ( !$service_type ) {
        return 140;
      }
    }

    if ( !$this->wholesaler_id ) {
      return 100;
    } else {
      $wholesaler = new wholesalers();
      $wholesaler->wholesaler_id = $this->wholesaler_id;
      $wholesaler->load();
      if ( !$wholesaler ) {
        return 100;
      }
    }

    if ( $this->wholesaler_id != 1 && !$this->parent_plan_id ) {
      return 171;
    }

    $this->active = strtolower($this->active);
    if ($this->active != 'yes' && $this->active != 'no') {
      
      return 4;
      
    }

    if ( !$this->group_id ) {
      return 281;
    }

    // ALL OK
    return 0;
    
  }

   /* function get_all()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function get_all(){
      
      $query = "SELECT * FROM plans";
      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

   /* function get_wholesaler_plans()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function get_wholesaler_plans(){
      
      $query = "SELECT * FROM plans WHERE wholesaler_id = " . $this->db->quote($this->wholesaler_id);
      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

   /* function get_wholesaler_group()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function get_wholesaler_group(){
      
      $query = "SELECT * FROM plans WHERE wholesaler_id = " . $this->db->quote($this->wholesaler_id) . " AND group_id=" . $this->db->quote($this->group_id);
      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

   /* function get_all_except()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details except own plan_id
  ** 
  */
  function get_all_except($except){
      
      $query = "SELECT * FROM plans WHERE plan_id != " . $except;
      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

   /* function order_get_all()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function order_get_all($key, $group_id_arr){
      
      $query = "SELECT * FROM plans WHERE type_id = " . $this->db->quote($key);

      if ( count($group_id_arr) != 0 ) {
        if ( count($group_id_arr) == 1 ) {
          $query .=  " AND group_id = " . $this->db->quote($group_id_arr[0]["group_id"]);
        } else {
          $query .=  " AND (group_id = " . $this->db->quote($group_id_arr[0]["group_id"]);

          for ($i=1; $i < count($group_id_arr); $i++) { 
            $query .= " OR group_id = " . $this->db->quote($group_id_arr[$i]["group_id"]);
          }
          $query .= ")";
        }
      }
      
      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

 /* function plans_list()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - array
  **
  ** RETURNS:
  ** - String
  ** 
  */

  function plans_list( $name, $array ){
      
    $list = '<select name="' . $name . '" id="' . $name . '">'; 
    $list .= '<option value="0">Select Parent Plan</option>';

    if ($array) {
      for ( $x = 0; $x < count($array); $x++ ) {
        if( $array[0]["active"] == "yes" ){

          $service_type = new service_types();
          $service_type->type_id = $array[$x]["type_id"];
          $service_type->load();

          $list .= "<option value='" . $array[$x]["plan_id"] . "' {P_". $array[$x]["plan_id"] ."_SELECT}>" . $array[$x]["description"] . " - " . $service_type->description . " - " . $array[$x]["speed"] . "</option>";
        }
      }

      $list .= '</select>';

    }

      return $list; 

  }

 /* function plans_list()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - array
  **
  ** RETURNS:
  ** - String
  ** 
  */

  function plans_list2( $name, $array, $type_id, $sub_type ){

    $list = '<select name="' . $name . '" id="' . $name . '" onchange="form.submit.click();">'; 
    $list .= '<option value="0">Select Parent Plan</option>';

    if ($array) {
      for ( $x = 0; $x < count($array); $x++ ) {
        if( $array[$x]["active"] == "yes" ){

          $service_type = new service_types();
          $service_type->type_id = $array[$x]["type_id"];
          $service_type->load();
          
          if ( $type_id == '5' ) {
            if ( $sub_type == $array[$x]["sub_type"] ) {

              $list .= "<option value='" . $array[$x]["plan_id"] . "' {P_". $array[$x]["plan_id"] ."_SELECT}>" . $array[$x]["description"] . " - " . $service_type->description . " - " . $array[$x]["speed"] . "</option>";
                          
            }
          } else if ( $type_id == '6' ) {
            if ( $sub_type == $array[$x]["sub_type"] ) {

              $list .= "<option value='" . $array[$x]["plan_id"] . "' {P_". $array[$x]["plan_id"] ."_SELECT}>" . $array[$x]["description"] . " - " . $service_type->description . " - " . $array[$x]["speed"] . "</option>";
                          
            }
          } else {

            $list .= "<option value='" . $array[$x]["plan_id"] . "' {P_". $array[$x]["plan_id"] ."_SELECT}>" . $array[$x]["description"] . " - " . $service_type->description . " - " . $array[$x]["speed"] . "</option>";
            
          }
        }
      }

      $list .= '</select>';

    }

      return $list; 

  }

   /* function plans_list3()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - array
  **
  ** RETURNS:
  ** - String
  ** 
  */

  function plans_list3( $name, $array, $sub_type ){
      
    $list = '<select name="' . $name . '" id="' . $name . '" onchange="form.submit.click();">'; 
    $list .= '<option value="0">Select Parent Plan</option>';

    if ($array) {
      for ( $x = 0; $x < count($array); $x++ ) {
        if( $array[0]["active"] == "yes" ){

          $service_type = new service_types();
          $service_type->type_id = $array[$x]["type_id"];
          $service_type->load();

          $list .= "<option value='" . $array[$x]["plan_id"] . "' {P_". $array[$x]["plan_id"] ."_SELECT}>" . $array[$x]["description"] . " - " . $service_type->description . " - " . $array[$x]["speed"] . "</option>";
        }
      }

      $list .= '</select>';

    }

      return $list; 

  }

   /* function order_get_all4()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function order_get_all4($key, $wholesaler_id){
      
      $query = "SELECT * FROM plans WHERE type_id = " . $key . " AND wholesaler_id = " . $wholesaler_id;
      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

 /* function retail_plans_list()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - array
  **
  ** RETURNS:
  ** - String
  ** 
  */

  function retail_plans_list( $name, $array ){
      
    $list = '<select name="' . $name . '" id="' . $name . '" onchange="form.submit.click();">'; 
    $list .= '<option value="0">Select Plan</option>';

    if ($array) {
      for ( $x = 0; $x < count($array); $x++ ) {
        if( $array[0]["active"] == "yes" ){

          $service_type = new service_types();
          $service_type->type_id = $array[$x]["type_id"];
          $service_type->load();
          
          $list .= "<option value='" . $array[$x]["plan_id"] . "' {PR_". $array[$x]["plan_id"] ."_SELECT}>" . $array[$x]["description"] . " - " . $service_type->description . " - " . $array[$x]["speed"] . "</option>";
        }
      }

      $list .= '</select>';

    }

      return $list; 

  }

   /* function order_get_all2()
  **
  ** DESCRIPTION: loads data from table depending on speed
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function order_get_all2($key, $wholesaler_id, $speed, $price_zone){
      
      $query = "SELECT * FROM plans WHERE type_id = " . $key . " AND wholesaler_id = " . $wholesaler_id . " AND speed LIKE " . $this->db->quote("%".$speed."%");
      $query .= " AND price_zone = " . $this->db->quote($price_zone);

      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

   /* function order_get_all3()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function order_get_all3($key, $wholesaler_id){
      
      $query = "SELECT * FROM plans WHERE type_id = " . $this->db->quote($key) . " AND wholesaler_id = " . $this->db->quote($wholesaler_id);
      
      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

   /* function order_my_plans()
  **
  ** DESCRIPTION: loads data from table depending on speed
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function order_my_plans(){
      
      $query = "SELECT * FROM plans WHERE wholesaler_id = " . $this->db->quote($this->wholesaler_id) ;
      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

   /* function filter_plans()
  **
  ** DESCRIPTION: loads data from table depending on speed
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function filter_plans($type,$subtype){
      
      $query = "SELECT * FROM plans WHERE wholesaler_id = " . $this->db->quote($this->wholesaler_id) ;

      if ( !empty($type) ) {
        $query .= " AND type_id = " . $this->db->quote($type);
      }

      if ( !empty($subtype) ) {
        $query .= " AND sub_type LIKE " . $this->db->quote("%" . $subtype . "%");
      }

      $result = $this->db->execute_query($query);
      
      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

   /* function filter_plans2()
  **
  ** DESCRIPTION: loads data from table depending on speed
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function filter_plans2($type,$subtype){
      
      $query = "SELECT * FROM plans WHERE " ;

      if ( !empty($type) ) {
        $query .= " type_id = " . $this->db->quote($type);
      }

      if ( !empty($subtype) ) {

        if ( !empty($type) ) {
          $query .= " AND";
        }

        $query .= " sub_type LIKE " . $this->db->quote("%" . $subtype . "%");
      }

      if ( !empty($type) || !empty($subtype) ) {

        $result = $this->db->execute_query($query);

      }
      
      $a = array();

      if ( isset($result) ) {
        if ($result != 0 ) {

          while($row = $this->db->fetch_row_array($result)) {
            $a[] = $row;
          }
        }
      }

    return $a;

  }

   /* function filter_plans3()
  **
  ** DESCRIPTION: loads data from table depending on speed
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function filter_plans3($type,$subtype){
      
      $query = "SELECT * FROM plans WHERE " ;

      if ( !empty($type) ) {
        $query .= " type_id = " . $this->db->quote($type);
      }

      if ( !empty($subtype) ) {

        if ( !empty($type) ) {
          $query .= " AND";
        }

        $query .= " sub_type LIKE " . $this->db->quote("%" . $subtype . "%");
      }

      $query .= " AND wholesaler_id = " . $this->db->quote($this->wholesaler_id);
      
      if ( !empty($type) || !empty($subtype) ) {

        $result = $this->db->execute_query($query);

      }

      $a = array();

      if ( isset($result) ) {
        if ($result != 0 ) {

          while($row = $this->db->fetch_row_array($result)) {
            $a[] = $row;
          }
        }
      }

    return $a;

  }

   /* function get_wholesaler_plans_by_group()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plans with correpsonding details
  ** 
  */
  function get_wholesaler_plans_by_group($group_id){
      
      $query = "SELECT * FROM plans ";
      $query .= "WHERE type_id=".$this->db->quote($this->type_id);
      $query .= " AND access_method=".$this->db->quote($this->accessMethod);
      $query .= " AND price_zone LIKE ".$this->db->quote("%".$this->priceZone."%");
      $query .= " AND group_id=".$this->db->quote($group_id);
      $query .= " AND speed=".$this->db->quote($this->speed);
      // if ( count($array) !=0 ) {
      //   $query.= " AND (group_id=".$this->db->quote($array[0]["group_id"]);
      //   for ($a=1; $a < count($array); $a++) { 
      //     $query .= " OR group_id=".$this->db->quote($array[$a]["group_id"]);
      //   }
      //   $result = $this->db->execute_query($query);
      //   $query.=")";
      // }
      $result = $this->db->execute_query($query);

      $a = array();

      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

}

