<?php
///////////////////////////////////////////////////////////////////////////////
//
// service_temp.class - Class for storing temporary data used in creating a service
// $Id$
//
///////////////////////////////////////////////////////////////////////////////
//
// HISTORY:
// $Log$
///////////////////////////////////////////////////////////////////////////////
include_once "db.class";
include_once "config.class";

class service_temp {

  var $data_key;
  var $data;
  var $timestamp;
  
  
  var $db;
  var $server_name;
  var $database_name;
  var $user_name;
  var $user_password;


  /* function user() 
  **
  ** DESCRIPTION: Class constructor, initalizes and sets up DB connectoin
  **
  ** PARAMETERS:
  **
  ** RETURNS:
  ** 
  */
  function service_temp() { 
    
	
    $config = new config();
    
    $this->server_name = $config->mysql_server_name;
    $this->database_name = $config->mysql_database_name;
    $this->user_name = $config->mysql_user_name;
    $this->user_password = $config->mysql_user_password;
    
    $this->db = new db($this->server_name, $this->database_name, $this->user_name, $this->user_password);
    
    $this->delete_expired();


  }

  /* function load()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function load() {
  
    if ($this->data_key) {
      
      $query = "SELECT * FROM service_temp WHERE data_key = " . $this->db->quote($this->data_key);
      $result = $this->db->execute_query($query);
      
      if ($result != 0 ) {

        $row = $this->db->fetch_row_array($result);
        
        if(is_array($row)){
          while ($cel = each($row)) {

  	        $key = $cel['key'];
            
            $this->{$key} = $cel['value'];
            
          }
        }
      }    
    }

    return 0;
    
  }

  /* function exist()
  **
  ** DESCRIPTION: checks to see if an id exists
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - user exists
  ** 0 - user does not exist
  ** 
  */
  function exist() {
  
    $this->data_key = strtolower($this->data_key);
  
    // Check we have an user
    if (!$this->data_key) {
    
      return 0;
      
    }
    
    $query = "SELECT * FROM service_temp WHERE data_key = " . $this->db->quote($this->data_key);
    $result = $this->db->execute_query($query);
      
    if ($result != 0 ) {
    
      $row_count = $this->db->fetch_row_count($result);
      
      if ($row_count == 1) {
      
        return 1;
        
      } else {
      
        return 0;
        
      }
      
    }
    
    return 0;
  
    
  }

  /* function create()
  **
  ** DESCRIPTION: creates a new entry
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function create_real() {
    

    // Create the account
    $query = "INSERT INTO service_temp ( data_key, data)";
    $query .= " VALUES (" . $this->db->quote($this->data_key) . "," . $this->db->quote($this->data) . ")";

    $result = $this->db->execute_query($query);
    

    if ($result == 0) {
      return 0;
      
    } else {

      return 1;
					
    }
  }
  
  function create() {
  
    if ($this->create_real() == 1) {

      $this->load();
    
      return 1;
      
    } else {
    
      return 0;
      
    }    
      
  }

  /* function save_real()
  **
  ** DESCRIPTION: saves current data into an already existant entry
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function save_real() {

    // Check if id exists    
    if (!service_temp::exist()) {
      return 0;
      
    }
    
    $query = "UPDATE service_temp SET data = " . $this->db->quote($this->data);
    $query .= " WHERE data_key = " . $this->db->quote($this->data_key);

    $result = $this->db->execute_query($query);

    if ($result == 0) {

      return 0;
      
    } else {

      return 1;
        
    }
  }

  function save() {
  
    if ($this->save_real() == 1) {

      $this->load();
    
      return 1;
      
    } else {
    
      return 0;
      
    }    
      
  }

  /* function delete()
  **
  ** DESCRIPTION: Deletes an entry
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function delete() {
  
		$this->load();
    
    if (!$this->exist()) {
    
      return 0;
      
    }
    
    // Prepare the query
    $query = "DELETE FROM service_temp WHERE data_key = " . $this->db->quote($this->data_key);
    $result = $this->db->execute_query($query);
    
    if ($result == 0) {
    
      return 0;
      
    } else {

	  return 1;
    }
  }

  /* function delete_expired()
  **
  ** DESCRIPTION: Deletes an entry
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function delete_expired() {
    
    // Prepare the query
    $query = "DELETE FROM service_temp WHERE timestamp < (NOW() - INTERVAL 7 DAY)";
    $result = $this->db->execute_query($query);
    
    if ($result == 0) {
    
      return 0;
      
    } else {

    return 1;
    }
  }

}

