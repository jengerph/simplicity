<?php
///////////////////////////////////////////////////////////////////////////////
//
// plan_groups.class - Class for accessing plan_groups details
// $Id$
//
///////////////////////////////////////////////////////////////////////////////
//
// HISTORY:
// $Log$
///////////////////////////////////////////////////////////////////////////////
include_once "db.class";
include_once "config.class";
include_once "validate.class";
include_once "misc.class";
include_once "audit.class";

class plan_groups {

  var $group_id;
  var $wholesaler_id;
  var $type_id;
  var $description;
  var $active;
  
  var $db;
  var $server_name;
  var $database_name;
  var $user_name;
  var $user_password;


  /* function plan_groups() 
  **
  ** DESCRIPTION: Class constructor, initalizes and sets up DB connectoin
  **
  ** PARAMETERS:
  **
  ** RETURNS:
  ** 
  */
  function plan_groups() { 
    
	
    $config = new config();
    
    $this->server_name = $config->mysql_server_name;
    $this->database_name = $config->mysql_database_name;
    $this->user_name = $config->mysql_user_name;
    $this->user_password = $config->mysql_user_password;

    $this->active = 'yes';

    $this->db = new db($this->server_name, $this->database_name, $this->user_name, $this->user_password);
    
  }

  /* function load()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function load() {

    $this->group_id = strtoupper($this->group_id);

    if (!$this->group_id) {
    
      return 0;
      
    }
  
    if ($this->group_id) {
      
      $query = "SELECT * FROM plan_groups WHERE group_id = " . $this->db->quote($this->group_id);
      $result = $this->db->execute_query($query);

      if ($result != 0 ) {

        $row = $this->db->fetch_row_array($result);
        if ( $row ) {
          while ($cel = each($row)) { 

            $key = $cel['key'];
            
            $this->{$key} = $cel['value'];
            
          }
        }
      }    
    }


    return 0;
    
  }

  /* function exist()
  **
  ** DESCRIPTION: checks to see if an id exists
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - user exists
  ** 0 - user does not exist
  ** 
  */
  function exist() {
  
    $this->group_id = strtoupper($this->group_id);
  
    // Check we have an group_id
    if (!$this->group_id) {
    
      return 0;
      
    }
    
    $query = "SELECT group_id FROM plan_groups WHERE group_id = " . $this->db->quote($this->group_id);
    $result = $this->db->execute_query($query);
      
    if ($result != 0 ) {
    
      $row_count = $this->db->fetch_row_count($result);
      
      if ($row_count == 1) {
      
        return 1;
        
      } else {
      
        return 0;
        
      }
      
    }
    
    return 0;
  
    
  }



  /* function create()
  **
  ** DESCRIPTION: creates a new entry
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function create_real() {
	
    // Validate
    if (plan_groups::validate()) {
    
      return 0;
      
    }

    $ws = new plan_groups();
    $ws->load();
    
    // Create the property search
    $query = "INSERT INTO plan_groups (group_id, wholesaler_id, type_id, description, active)";
    $query .= " VALUES (" . $this->db->quote($this->group_id) . "," . $this->db->quote($this->wholesaler_id) . "," . $this->db->quote($this->type_id) . "," . $this->db->quote($this->description) . "," . $this->db->quote($this->active) . ")";

    $result = $this->db->execute_query($query);
    
    if ($result == 0) {
      return 0;
      
    } else {
    
	    $this->group_id = $this->db->fetch_insert_id();

			$this->load();

      //Audit section for storing first changes
        $temp = get_object_vars($this);

        unset($temp['db']);
        unset($temp["server_name"]);
        unset($temp["database_name"]);
        unset($temp["user_name"]);
        unset($temp["user_password"]);
        $keys = array_keys($temp);
        
        $changes = new audit();
        $changes->store_first_changes($keys,$this,"plan_groups",$this->group_id);

			
      return 1;
					
    }
  }
  
  function create() {
  
    if ($this->create_real() == 1) {

      $this->load();
    
      return 1;
      
    } else {
    
      return 0;
      
    }    
      
  }

  /* function delete()
  **
  ** DESCRIPTION: Deletes an entry
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function delete() {
  
		$this->load();
    
    if (!$this->exist()) {
    
      return 0;
      
    }

    
    // Prepare the query
    $query = "DELETE FROM plan_groups WHERE group_id = " . $this->db->quote($this->group_id);
    $result = $this->db->execute_query($query);

    if ($result == 0) {
    
      return 0;
      
    } else {

      return 1;
      
      
    }
  }

  /* function validate()
  **
  ** DESCRIPTION: validates data currently stored in variables
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 0 - sucess
  ** 
  */
  function validate() {

    if (!$this->wholesaler_id) {
      return 100;
    }

    if (empty($this->type_id)) {
      return 140;
    }

    if (!$this->description) {
      return 170;
    }

    if ( $this->group_id ) {
      if (!$this->exist()) {
        return 280;
      }
    }
    
    // ALL OK
    return 0;
    
  }

  /* function save_real()
  **
  ** DESCRIPTION: saves current data into an already existant entry
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** 1 - sucess
  ** 0 - fail
  ** 
  */
  function save_real() {
  
    // Validate
    if (plan_groups::validate()) {
		
      return 0;
      
    }

    // Check if id exists    
    if (!plan_groups::exist()) {
      return 0;
      
    }

      $ws = new plan_groups();
      $ws->group_id = $this->group_id;
      $ws->load();

    $query = "UPDATE plan_groups SET wholesaler_id = " . $this->db->quote($this->wholesaler_id);
    $query .= ", type_id = " . $this->db->quote($this->type_id);
    $query .= ", description = " . $this->db->quote($this->description);
    $query .= ", active = " . $this->db->quote($this->active);
    $query .= " WHERE group_id = " . $this->db->quote($this->group_id);
    $result = $this->db->execute_query($query);
    
    if ($result == 0) {

      return 0;
      
    } else {

        //Audit section for storing first changes
        $temp = get_object_vars($this);

        unset($temp['db']);
        unset($temp["server_name"]);
        unset($temp["database_name"]);
        unset($temp["user_name"]);
        unset($temp["user_password"]);
        $keys = array_keys($temp);
        
        $changes = new audit();
        $changes->store_changes($keys,$ws,$this,"plan_groups",$this->group_id);

     	return 1;
				
    }
  }

  function save() {
  
    if ($this->save_real() == 1) {

      $this->load();
    
      return 1;
      
    } else {
		
      return 0;
      
    }    
      
  }

 /* function get_plan_groups()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of plan_groups with correpsonding details
  ** 
  */

  function get_plan_groups(){
      
      $query = "SELECT * FROM plan_groups ";
      $result = $this->db->execute_query($query);
      
      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

 /* function wholesaler_plan_groups()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of wholesaler_plan_groups with correpsonding details
  ** 
  */

  function wholesaler_plan_groups(){
      
      $a = array();

      $query = "SELECT * FROM plan_groups WHERE wholesaler_id = " . $this->db->quote($this->wholesaler_id);

      if ( isset($this->type_id) && !empty($this->type_id) ) {
        if ( $this->type_id == 1 || $this->type_id == 2 || $this->type_id == 8) {
          $query .= " AND (type_id = 1 OR type_id = 2 OR type_id = 8)";
        } else {
          $query .= " AND type_id = " . $this->db->quote($this->type_id);
        }
      }
      
      $result = $this->db->execute_query($query);
      
      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

 /* function plan_groups_list()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - array
  **
  ** RETURNS:
  ** - String
  ** 
  */

  function plan_groups_list( $name, $array ){
      
    $list = '<select name="' . $name . '" id="' . $name . '">'; 
    $list .= '<option value="0">Select Group</option>';

    if ($array) {
      for ( $x = 0; $x < count($array); $x++ ) {
        if( $array[$x]["active"] == "yes" ){
          $list .= "<option value='" . $array[$x]["group_id"] . "' {PG_". $array[$x]["group_id"] ."_SELECT}>" . $array[$x]["description"] . " </option>";
        }
      }


    }
      $list .= '</select>';
      
      return $list; 

  }

 /* function plan_groups_list_multi()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - array
  **
  ** RETURNS:
  ** - String
  ** 
  */

  function plan_groups_list_multi( $name, $array, $group_id, $wholesaler_id ){
      
    $list = '<select name="' . $name . "_" . $group_id . '" id="' . $name . "_" . $group_id . '" style="min-width: 200px; min-height: 150px;" multiple>'; 
    // $list .= '<option value="0">Select Group</option>';

    if ($array) {
      for ( $x = 0; $x < count($array); $x++ ) {
        if( $array[$x]["active"] == "yes" && $array[$x]["wholesaler_id"] != $wholesaler_id ){
          $list .= "<option value='" . $array[$x]["wholesaler_id"] . "' {WS_".$array[$x]["wholesaler_id"]."_PG_". $group_id ."_SELECT}>" . $array[$x]["company_name"] . " </option>";
        }
      }


    }
      $list .= '</select>';
      
      return $list; 

  }

 /* function get_wholesalers_in_group()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of wholesalers with correpsonding details
  ** 
  */

  function get_wholesalers_in_group(){
      $a = array();
      $query = "SELECT * FROM wholesaler_plan_groups WHERE group_id = " . $this->db->quote($this->group_id);
      $result = $this->db->execute_query($query);
      
      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

 /* function get_group()
  **
  ** DESCRIPTION: loads data from table
  **
  ** PARAMETERS:
  ** - none
  **
  ** RETURNS:
  ** - array of wholesalers with correpsonding details
  ** 
  */

  function get_group(){
      $a = array();
      $query = "SELECT * FROM wholesaler_plan_groups WHERE wholesaler_id = " . $this->db->quote($this->wholesaler_id);
      $result = $this->db->execute_query($query);
      
      if ($result != 0 ) {

        while($row = $this->db->fetch_row_array($result)) {
          $a[] = $row;
        }
      }

    return $a;

  }

}

